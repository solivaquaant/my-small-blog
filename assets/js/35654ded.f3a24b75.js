"use strict";(self.webpackChunkmy_own_blog=self.webpackChunkmy_own_blog||[]).push([[1959],{28453:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>a});var i=s(96540);const t={},r=i.createContext(t);function c(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),i.createElement(r.Provider,{value:n},e.children)}},88836:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>c,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"pico-ctf/forensics/whitepages","title":"WhitePages","description":"- Description: I stopped using YellowPages and moved onto WhitePages... but the page they gave me is all blank!","source":"@site/docs/pico-ctf/forensics/whitepages.mdx","sourceDirName":"pico-ctf/forensics","slug":"/pico-ctf/forensics/whitepages","permalink":"/my-small-blog/docs/pico-ctf/forensics/whitepages","draft":false,"unlisted":false,"tags":[{"inline":false,"label":"Forensics","permalink":"/my-small-blog/docs/tags/forensics","description":"Forensics tag description"}],"version":"current","frontMatter":{"tags":["forensics"]},"sidebar":"tutorialSidebar","previous":{"title":"What Lies Within","permalink":"/my-small-blog/docs/pico-ctf/forensics/what-lies-within"},"next":{"title":"WPA-ing Out","permalink":"/my-small-blog/docs/pico-ctf/forensics/wpa-ing-out/"}}');var t=s(74848),r=s(28453);const c={tags:["forensics"]},a="WhitePages",l={},o=[{value:"\ud83d\udd0e Solution",id:"-solution",level:2},{value:"\ud83d\udea9Flag",id:"flag",level:2}];function h(e){const n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"whitepages",children:"WhitePages"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Description:"})," I stopped using YellowPages and moved onto WhitePages... but the page they gave me is all blank!"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Difficulty:"})," Medium"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"-solution",children:"\ud83d\udd0e Solution"}),"\n",(0,t.jsx)(n.p,{children:"For this challenge, we are given a .txt file.\r\nAt first glance, the file looks completely empty when opened in a text editor."}),"\n",(0,t.jsx)(n.p,{children:"However, inspecting the file in a hex viewer reveals that it is not truly empty."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"> xxd whitepages.txt \r\n00000000: e280 83e2 8083 e280 83e2 8083 20e2 8083  ............ ...\r\n00000010: 20e2 8083 e280 83e2 8083 e280 83e2 8083   ...............\r\n00000020: 20e2 8083 e280 8320 e280 83e2 8083 e280   ...... ........\r\n00000030: 83e2 8083 20e2 8083 e280 8320 e280 8320  .... ...... ... \r\n00000040: 2020 e280 83e2 8083 e280 83e2 8083 e280    ..............\r\n00000050: 8320 20e2 8083 20e2 8083 e280 8320 e280  .  ... ...... ..\r\n00000060: 8320 20e2 8083 e280 83e2 8083 2020 e280  .  .........  ..\r\n00000070: 8320 20e2 8083 2020 2020 e280 8320 e280  .  ...    ... ..\r\n00000080: 83e2 8083 e280 83e2 8083 2020 e280 8320  ..........  ... \r\n00000090: e280 8320 e280 8320 e280 83e2 8083 e280  ... ... ........\r\n000000a0: 8320 e280 83e2 8083 e280 8320 20e2 8083  . .........  ...\r\n000000b0: e280 83e2 8083 e280 83e2 8083 20e2 8083  ............ ...\n"})}),"\n",(0,t.jsx)(n.p,{children:"The content actually consists of a repeating whitespace-like pattern, with 2 main types of characters present:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"E2 80 83"}),": This sequence corresponds to the UTF-8 encoding of the EM SPACE (U+2003) character"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"20"}),": This is the standard space character"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Given that only these 2 characters are present, it strongly suggests a form of binary encoding.\r\nThe challenge likely defines the mapping in 1 of 2 possible ways:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Case 1: ",(0,t.jsx)(n.code,{children:"E2 80 83"})," \u2192 ",(0,t.jsx)(n.code,{children:"0"}),", and ",(0,t.jsx)(n.code,{children:"20"})," \u2192 ",(0,t.jsx)(n.code,{children:"1"})]}),"\n",(0,t.jsxs)(n.li,{children:["Case 2: the reverse mapping, where ",(0,t.jsx)(n.code,{children:"E2 80 83"})," \u2192 ",(0,t.jsx)(n.code,{children:"1"}),", and ",(0,t.jsx)(n.code,{children:"20"})," \u2192 ",(0,t.jsx)(n.code,{children:"0"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"To solve this, we can write a simple Python script that:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Reads the file as raw bytes"}),"\n",(0,t.jsx)(n.li,{children:"Iterates through the content, replacing each character according to the chosen mapping"}),"\n",(0,t.jsx)(n.li,{children:"Concatenates the result into a binary string"}),"\n",(0,t.jsx)(n.li,{children:"Splits the binary string into 8-bit chunks and converts each chunk into its ASCII equivalent"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'def extract_ascii(filename):\r\n    with open(filename, "rb") as f:\r\n        data = f.read() \r\n    em_space = bytes.fromhex("E28083")  # EM SPACE\r\n    space = bytes.fromhex("20")         # SPACE\r\n    \r\n    def decode(mapping):\r\n        bits = []\r\n        i = 0\r\n        while i < len(data):\r\n            if data[i:i+3] == em_space:  \r\n                bits.append(mapping["em_space"])\r\n                i += 3\r\n            elif data[i:i+1] == space:   \r\n                bits.append(mapping["space"])\r\n                i += 1\r\n            else:\r\n                i += 1\r\n        bitstring = "".join(bits)        \r\n        chars = []\r\n        for j in range(0, len(bitstring), 8):\r\n            byte = bitstring[j:j+8]\r\n            if len(byte) == 8:\r\n                chars.append(chr(int(byte, 2)))\r\n        return "".join(chars)\r\n    \r\n    # E28083 = 0, 20 = 1\r\n    case1 = decode({"em_space":"0", "space":"1"})\r\n    # E28083 = 1, 20 = 0\r\n    case2 = decode({"em_space":"1", "space":"0"})  \r\n    return case1, case2\r\n\r\nfile_path = "whitepages.txt"  \r\nc1, c2 = extract_ascii(file_path)\r\nprint("Case 1:", c1)\r\nprint("Case 2:", c2)\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Running the script with both mappings, we find that ",(0,t.jsx)(n.strong,{children:"Case 1"})," yields a meaningful result, successfully recovering the original hidden content along with the flag."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"> python script.py  \r\nCase 1: \r\n                picoCTF\r\n\r\n                SEE PUBLIC RECORDS & BACKGROUND REPORT\r\n                5000 Forbes Ave, Pittsburgh, PA 15213\r\n                picoCTF{not_all_spaces_are_created_equal_7100860b0fa779a5bd8ce29f24f586dc}\r\n\r\nCase 2: \xf5\xf6\xf6\xbc\xab\xb9\xf5\xf5\xf6\xf6\xac\xba\xba\xdf\xaf\xaa\xbd\xb3\xb6\xbc\xdf\xad\xba\xbc\xb0\xad\xbb\xac\xdf\xd9\xdf\xbd\xbe\xbc\xb4\xb8\xad\xb0\xaa\xb1\xbb\xdf\xad\xba\xaf\xb0\xad\xab\xf5\xf6\xf6\xca\xcf\xcf\xcf\xdf\xb9\xdf\xbe\xd3\xdf\xaf\xd3\xdf\xaf\xbe\xdf\xce\xca\xcd\xce\xcc\xf5\xf6\xf6\xbc\xab\xb9\xa0\xa0\xa0\xa0\xa0\xc8\xce\xcf\xcf\xc7\xc9\xcf\xcf\xc8\xc8\xc6\xca\xcd\xc6\xcd\xcb\xca\xc7\xc9\xf5\xf6\xf6\n"})}),"\n",(0,t.jsx)(n.h2,{id:"flag",children:"\ud83d\udea9Flag"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"picoCTF{not_all_spaces_are_created_equal_7100860b0fa779a5bd8ce29f24f586dc}"})}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}}}]);