"use strict";(self.webpackChunkmy_own_blog=self.webpackChunkmy_own_blog||[]).push([[2955],{28453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>l});var t=s(96540);const i={},r=t.createContext(i);function o(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(r.Provider,{value:n},e.children)}},35552:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"pico-ctf/web-exploitation/apriti-sesamo","title":"Apriti sesamo","description":"- Description: I found a web app that claims to be impossible to hack!","source":"@site/docs/pico-ctf/web-exploitation/apriti-sesamo.mdx","sourceDirName":"pico-ctf/web-exploitation","slug":"/pico-ctf/web-exploitation/apriti-sesamo","permalink":"/my-small-blog/docs/pico-ctf/web-exploitation/apriti-sesamo","draft":false,"unlisted":false,"tags":[{"inline":false,"label":"Web","permalink":"/my-small-blog/docs/tags/web","description":"Web tag description"}],"version":"current","frontMatter":{"tags":["web"]},"sidebar":"tutorialSidebar","previous":{"title":"SOAP","permalink":"/my-small-blog/docs/pico-ctf/web-exploitation/SOAP/"},"next":{"title":"Bookmarklet","permalink":"/my-small-blog/docs/pico-ctf/web-exploitation/bookmarklet"}}');var i=s(74848),r=s(28453);const o={tags:["web"]},l="Apriti sesamo",a={},c=[{value:"\ud83d\udd0e Solution",id:"-solution",level:2},{value:"\ud83d\udea9Flag",id:"flag",level:2}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"apriti-sesamo",children:"Apriti sesamo"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Description:"})," I found a web app that claims to be impossible to hack!"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Difficulty:"})," Medium"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"-solution",children:"\ud83d\udd0e Solution"}),"\n",(0,i.jsxs)(n.p,{children:["The website presents a login form at ",(0,i.jsx)(n.code,{children:"/impossibleLogin.php"}),".\r\nAttempting a random login simply returns the message: ",(0,i.jsx)(n.em,{children:"Failed! No flag for you"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["Given the hint about backup files, I tried appending common backup extensions such as ",(0,i.jsx)(n.code,{children:".old"}),", ",(0,i.jsx)(n.code,{children:"~"}),",... to the original path.\r\nThis led me to a backup version of the page at ",(0,i.jsx)(n.code,{children:"/impossibleLogin.php~"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"Inside, I discovered a block of obfuscated PHP code"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-php",children:'<?php\r\n if(isset($_POST[base64_decode("\\144\\130\\x4e\\154\\x63\\155\\x35\\x68\\142\\127\\125\\x3d")])&& isset($_POST[base64_decode("\\143\\x48\\x64\\x6b")])){$yuf85e0677=$_POST[base64_decode("\\144\\x58\\x4e\\154\\x63\\x6d\\65\\150\\x62\\127\\x55\\75")];$rs35c246d5=$_POST[base64_decode("\\143\\x48\\144\\153")];if($yuf85e0677==$rs35c246d5){echo base64_decode("\\x50\\x47\\112\\x79\\x4c\\172\\x35\\x47\\x59\\127\\154\\163\\132\\127\\x51\\x68\\111\\x45\\x35\\166\\x49\\x47\\132\\163\\131\\127\\x63\\x67\\x5a\\155\\71\\171\\111\\x48\\x6c\\166\\x64\\x51\\x3d\\x3d");}else{if(sha1($yuf85e0677)===sha1($rs35c246d5)){echo file_get_contents(base64_decode("\\x4c\\151\\64\\166\\x5a\\x6d\\x78\\x68\\x5a\\x79\\65\\60\\145\\110\\x51\\75"));}else{echo base64_decode("\\x50\\107\\112\\171\\x4c\\x7a\\65\\107\\x59\\x57\\154\\x73\\x5a\\127\\x51\\x68\\x49\\105\\x35\\x76\\111\\x47\\132\\x73\\131\\127\\x63\\x67\\x5a\\155\\71\\x79\\x49\\110\\154\\x76\\x64\\x51\\x3d\\75");}}}?>\n'})}),"\n",(0,i.jsxs)(n.p,{children:["After decoding it, I found the core login logic, which enforces the following conditions to access the ",(0,i.jsx)(n.code,{children:"flag.txt"})," file:"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"The username must not be equal to the password."}),"\n",(0,i.jsx)(n.li,{children:"The SHA-1 hash of the username must match the SHA-1 hash of the password."}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-php",children:'<?php\r\n    if (isset($_POST["username"]) && isset($_POST["pwd"])) {\r\n        $yuf85e0677 = $_POST["username"]; // username\r\n        $rs35c246d5 = $_POST["pwd"]; // password\r\n    if ($yuf85e0677 == $rs35c246d5) {\r\n        echo "<br/>Failed! No flag for you";\r\n    }  \r\n    else {\r\n        if (sha1($yuf85e0677) === sha1($rs35c246d5)) {\r\n            echo file_get_contents("../flag.txt");\r\n        } \r\n        else {\r\n            echo "<br/>Failed! No flag for you";\r\n        }\r\n    }\r\n}\r\n?>\n'})}),"\n",(0,i.jsxs)(n.p,{children:["In essence, this is a classic ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Hash_collision",children:"hash collision"})})," challenge - 2 different inputs producing the same hash output."]}),"\n",(0,i.jsxs)(n.p,{children:["To exploit this, I used 2 specially crafted PDF files with identical SHA-1 hashes, publicly released by Google in ",(0,i.jsx)(n.a,{href:"https://security.googleblog.com/2017/02/announcing-first-sha1collision.html",children:"their 2017 announcement of the first SHA-1 collision"}),".\r\nBy submitting these 2 PDFs 2 one as the username, the other as the password - I satisfied both conditions simultaneously.\r\nA small script was written to automate this submission."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'import requests \r\nimport urllib \r\n\r\nfile1 = urllib.request.urlopen("http://shattered.io/static/shattered-1.pdf").read()[:500]; \r\nfile2 = urllib.request.urlopen("http://shattered.io/static/shattered-2.pdf").read()[:500]; \r\n\r\nr = requests.post("http://verbal-sleep.picoctf.net:56613/impossibleLogin.php", \r\ndata={\'username\': file1, \'pwd\': file2}); \r\n\r\nprint(r.text)\n'})}),"\n",(0,i.jsx)(n.p,{children:"Upon a successful login, the server responded with the contents of the flag."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Login Page</title>\r\n</head>\r\n<body style="text-align:center;">\r\n    <pre>\r\n _               _         _  __                                       \r\n| |             (_)       (_)/ _|                                      \r\n| | ___   __ _   _ _ __    _| |_   _   _  ___  _   _    ___ __ _ _ __  \r\n| |/ _ \\ / _` | | | \'_ \\  | |  _| | | | |/ _ \\| | | |  / __/ _` | \'_ \\ \r\n| | (_) | (_| | | | | | | | | |   | |_| | (_) | |_| | | (_| (_| | | | |\r\n|_|\\___/ \\__, | |_|_| |_| |_|_|    \\__, |\\___/ \\__,_|  \\___\\__,_|_| |_|\r\n          __/ |                     __/ |                              \r\n         |___/                     |___/                               \r\n\r\n\r\n    </pre>\r\n    <br/>\r\n    <form action="impossibleLogin.php" method="post">\r\n        <label for="username">Username:</label><br>\r\n        <input type="text" id="username" name="username"><br>\r\n        <label for="pwd">Password:</label><br>\r\n        <input type="password" id="pwd" name="pwd"><br><br>\r\n        <input type="submit" value="Login">\r\n    </form>\r\n</body>\r\n</html>\r\n\r\npicoCTF{w3Ll_d3sErV3d_Ch4mp_b88bdb32}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"flag",children:"\ud83d\udea9Flag"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"picoCTF{w3Ll_d3sErV3d_Ch4mp_b88bdb32}"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);