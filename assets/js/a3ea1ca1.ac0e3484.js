"use strict";(self.webpackChunkmy_own_blog=self.webpackChunkmy_own_blog||[]).push([[4875],{1386:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"pico-ctf/reverse-engineering/flag-hunters","title":"Flag Hunters","description":"- Description: Lyrics jump from verses to the refrain kind of like a subroutine call.","source":"@site/docs/pico-ctf/reverse-engineering/flag-hunters.mdx","sourceDirName":"pico-ctf/reverse-engineering","slug":"/pico-ctf/reverse-engineering/flag-hunters","permalink":"/my-small-blog/docs/pico-ctf/reverse-engineering/flag-hunters","draft":false,"unlisted":false,"tags":[{"inline":false,"label":"Reverse Engineer","permalink":"/my-small-blog/docs/tags/reverse-engineer","description":"Reverse engineering tag description"}],"version":"current","frontMatter":{"tags":["reverse-engineer"]},"sidebar":"tutorialSidebar","previous":{"title":"droids4","permalink":"/my-small-blog/docs/pico-ctf/reverse-engineering/droids4/"},"next":{"title":"Transformation","permalink":"/my-small-blog/docs/pico-ctf/reverse-engineering/transformation"}}');var i=r(4848),s=r(8453);const o={tags:["reverse-engineer"]},l="Flag Hunters",c={},a=[{value:"\ud83d\udd0e Solution",id:"-solution",level:2},{value:"\ud83d\udea9Flag",id:"flag",level:2}];function h(e){const n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"flag-hunters",children:"Flag Hunters"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Description:"})," Lyrics jump from verses to the refrain kind of like a subroutine call.\r\nThere's a hidden refrain this program doesn't print by default.\r\nCan you get it to print it? There might be something in it for you."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Difficulty:"})," Easy"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"-solution",children:"\ud83d\udd0e Solution"}),"\n",(0,i.jsxs)(n.p,{children:["By analyzing the source code, we can see that the flag is embedded in the ",(0,i.jsx)(n.code,{children:"secret_intro"})," variable, which is then prepended to the beginning of the full lyrics stored in ",(0,i.jsx)(n.code,{children:"song_flag_hunters"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"secret_intro = \\\r\n'''...'''\\\r\n+ flag + '\\n'\r\n\r\nsong_flag_hunters = secret_intro +\\\r\n'''...'''\n"})}),"\n",(0,i.jsxs)(n.p,{children:["However, in line 132, the program begins execution from the label ",(0,i.jsx)(n.code,{children:"[VERSE1]"}),", skipping over the introductory lines - meaning the flag isn't shown by default."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"reader(song_flag_hunters, '[VERSE1]')\n"})}),"\n",(0,i.jsxs)(n.p,{children:["The song is structured into verses (",(0,i.jsx)(n.code,{children:"[VERSE]"}),") and repeated choruses (",(0,i.jsx)(n.code,{children:"[REFRAIN]"}),"), and the code also interprets a few special commands embedded in the lyrics:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"REFRAIN:"})," jump to the chorus section"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"RETURN:"})," marks the end of the chorus, and jumps back to the line after the original call"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"CROWD:"})," prompts the user to input a custom line"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"END:"})," stops the song"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["The key lies in the ",(0,i.jsx)(n.code,{children:"CROWD"})," instruction, which allows the user to input arbitrary text without any validation:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"elif re.match(r\"CROWD.*\", line):\r\n    crowd = input('Crowd: ')\r\n    song_lines[lip] = 'Crowd: ' + crowd\r\n    lip += 1\n"})}),"\n",(0,i.jsxs)(n.p,{children:["In addition, there's the ",(0,i.jsx)(n.code,{children:"RETURN [line_number]"})," command, which allows a jump to a specific line number:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'elif re.match(r"RETURN [0-9]+", line):\r\n    lip = int(line.split()[1])\n'})}),"\n",(0,i.jsxs)(n.p,{children:["At first glance, it seems we could try injecting something like ",(0,i.jsx)(n.strong,{children:"RETURN 0"})," through the CROWD input to jump to the very start of the song - where the flag is embedded.\r\nHowever, this doesn't work as expected. The program treats the entire user input as a single literal string, not an actual command."]}),"\n",(0,i.jsxs)(n.p,{children:["But upon inspecting this part of this code ",(0,i.jsx)(n.code,{children:"for line in song_lines[lip].split(';')"}),",\r\nwe realize something clever: each line can be split into multiple sub - commands using the semicolon ",(0,i.jsx)(n.strong,{children:";"})," delimiter."]}),"\n",(0,i.jsxs)(n.p,{children:["So, if we craft our input as ",(0,i.jsx)(n.strong,{children:";RETURN 0"}),", the RETURN 0 becomes a standalone command during parsing.\r\nThis allows us to inject a valid jump command through the CROWD prompt, redirecting execution to the very top of the lyrics where the flag resides - effectively bypassing the normal flow and revealing the hidden flag."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"tndt@tndt:~/Desktop$ nc verbal-sleep.picoctf.net 50812\r\nCommand line wizards, we're starting it right,\r\nSpawning shells in the terminal, hacking all night.\r\nScripts and searches, grep through the void,\r\nEvery keystroke, we're a cypher's envoy.\r\nBrute force the lock or craft that regex,\r\nFlag on the horizon, what challenge is next?\r\n\r\nWe're flag hunters in the ether, lighting up the grid,\r\nNo puzzle too dark, no challenge too hid.\r\nWith every exploit we trigger, every byte we decrypt,\r\nWe're chasing that victory, and we'll never quit.\r\n//highlight-next-line\r\nCrowd: ;RETURN 0\r\n\r\nEchoes in memory, packets in trace,\r\nDigging through the remnants to uncover with haste.\r\nHex and headers, carving out clues,\r\nResurrect the hidden, it's forensics we choose.\r\nDisk dumps and packet dumps, follow the trail,\r\nBuried deep in the noise, but we will prevail.\r\n\r\nWe're flag hunters in the ether, lighting up the grid,\r\nNo puzzle too dark, no challenge too hid.\r\nWith every exploit we trigger, every byte we decrypt,\r\nWe're chasing that victory, and we'll never quit.\r\nCrowd: \r\nPico warriors rising, puzzles laid bare,\r\nSolving each challenge with precision and flair.\r\nWith unity and skill, flags we deliver,\r\n//highlight-next-line\r\nThe ether's ours to conquer, picoCTF{70637h3r_f0r3v3r_62666df2}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"flag",children:"\ud83d\udea9Flag"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"picoCTF{70637h3r_f0r3v3r_62666df2}"})}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>l});var t=r(6540);const i={},s=t.createContext(i);function o(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);