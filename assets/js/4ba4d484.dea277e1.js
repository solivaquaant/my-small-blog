"use strict";(self.webpackChunkmy_own_blog=self.webpackChunkmy_own_blog||[]).push([[7470],{1817:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"pico-ctf/forensics/msb","title":"MSB","description":"- Description: This image passes LSB statistical analysis, but we can\'t help but think there must be something to the visual artifacts present in this image...","source":"@site/docs/pico-ctf/forensics/msb.mdx","sourceDirName":"pico-ctf/forensics","slug":"/pico-ctf/forensics/msb","permalink":"/my-small-blog/docs/pico-ctf/forensics/msb","draft":false,"unlisted":false,"tags":[{"inline":false,"label":"Forensics","permalink":"/my-small-blog/docs/tags/forensics","description":"Forensics tag description"}],"version":"current","frontMatter":{"tags":["forensics"]},"sidebar":"tutorialSidebar","previous":{"title":"Mob psycho","permalink":"/my-small-blog/docs/pico-ctf/forensics/mob-psycho/"},"next":{"title":"Packets Primer","permalink":"/my-small-blog/docs/pico-ctf/forensics/packets-primer/"}}');var s=t(4848),r=t(8453);const a={tags:["forensics"]},c="MSB",o={},l=[{value:"\ud83d\udd0e Solution",id:"-solution",level:2},{value:"\ud83d\udea9Flag",id:"flag",level:2}];function h(e){const n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"msb",children:"MSB"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Description:"})," This image passes LSB statistical analysis, but we can't help but think there must be something to the visual artifacts present in this image..."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Difficulty:"})," Medium"]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"-solution",children:"\ud83d\udd0e Solution"}),"\n",(0,s.jsxs)(n.p,{children:["The challenge provides an image file along with a hint referencing ",(0,s.jsx)(n.strong,{children:"MSB"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Unlike ",(0,s.jsx)(n.strong,{children:"LSB"})," - a commonly used technique in steganography challenges - ",(0,s.jsx)(n.strong,{children:"MSB"})," refers to the ",(0,s.jsx)(n.strong,{children:"Most Significant Bit"}),",\r\nwhich is the leftmost bit in a byte (bit 7, if counting from 0).\r\nIt holds the highest value because it contributes the most to the overall value of the byte.\r\nIn contrast, the ",(0,s.jsx)(n.strong,{children:"Least Significant Bit (LSB)"})," is the rightmost bit (bit 0), carrying the smallest value (1)."]}),"\n",(0,s.jsx)(n.p,{children:"For challenges involving either LSB or MSB, a simple script can often be used to extract hidden data:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Read each pixel of the image"}),"\n",(0,s.jsx)(n.li,{children:"Extract the MSB from each color channel (bit 7)"}),"\n",(0,s.jsx)(n.li,{children:"Concatenate the bits into a binary stream and convert it to ASCII to reveal any embedded message."}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'from PIL import Image\r\n\r\ndef extract_msb_bits(image_path):\r\n    img = Image.open(image_path)\r\n    pixels = list(img.getdata())\r\n    \r\n    bitstream = ""\r\n\r\n    for pixel in pixels:\r\n        if isinstance(pixel, tuple):\r\n            for channel in pixel[:3]: \r\n                msb = (channel & 0b10000000) >> 7\r\n                bitstream += str(msb)\r\n        else:\r\n            msb = (pixel & 0b10000000) >> 7\r\n            bitstream += str(msb)\r\n\r\n    return bitstream\r\n\r\ndef bits_to_ascii(bitstream):\r\n    chars = []\r\n    for i in range(0, len(bitstream), 8):\r\n        byte = bitstream[i:i+8]\r\n        if len(byte) < 8:\r\n            continue\r\n        ascii_char = chr(int(byte, 2))\r\n        chars.append(ascii_char)\r\n    return \'\'.join(chars)\r\n\r\nif __name__ == "__main__":\r\n    image_path = "Ninja-and-Prince-Genji-Ukiyoe-Utagawa-Kunisada.flag.png" \r\n    bitstream = extract_msb_bits(image_path)\r\n    hidden_text = bits_to_ascii(bitstream)\r\n    print(hidden_text)\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Running this script on the provided image yielded a very long text.\r\nBy searching for the string ",(0,s.jsx)(n.strong,{children:"pico"})," within that output, I was able to locate the flag."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'> python script.py | grep "pico"\r\npicoCTF{15_y0ur_que57_qu1x071c_0r_h3r01c_3a219174}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"flag",children:"\ud83d\udea9Flag"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"picoCTF{15_y0ur_que57_qu1x071c_0r_h3r01c_3a219174}"})}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>c});var i=t(6540);const s={},r=i.createContext(s);function a(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);