"use strict";(self.webpackChunkmy_own_blog=self.webpackChunkmy_own_blog||[]).push([[9025],{28453:(e,r,n)=>{n.d(r,{R:()=>i,x:()=>a});var t=n(96540);const o={},s=t.createContext(o);function i(e){const r=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),t.createElement(s.Provider,{value:r},e.children)}},69893:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"pico-ctf/reverse-engineering/vault-door-training","title":"vault-door-training","description":"- Description: Your mission is to enter Dr. Evil\'s laboratory and retrieve the blueprints for his Doomsday Project.","source":"@site/docs/pico-ctf/reverse-engineering/vault-door-training.mdx","sourceDirName":"pico-ctf/reverse-engineering","slug":"/pico-ctf/reverse-engineering/vault-door-training","permalink":"/my-small-blog/docs/pico-ctf/reverse-engineering/vault-door-training","draft":false,"unlisted":false,"tags":[{"inline":false,"label":"Reverse Engineer","permalink":"/my-small-blog/docs/tags/reverse-engineer","description":"Reverse engineering tag description"}],"version":"current","frontMatter":{"tags":["reverse-engineer"]},"sidebar":"tutorialSidebar","previous":{"title":"Transformation","permalink":"/my-small-blog/docs/pico-ctf/reverse-engineering/transformation"},"next":{"title":"Web Exploitation","permalink":"/my-small-blog/docs/category/web-exploitation"}}');var o=n(74848),s=n(28453);const i={tags:["reverse-engineer"]},a="vault-door-training",l={},c=[{value:"\ud83d\udd0e Solution",id:"-solution",level:2},{value:"\ud83d\udea9Flag",id:"flag",level:2}];function d(e){const r={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r.header,{children:(0,o.jsx)(r.h1,{id:"vault-door-training",children:"vault-door-training"})}),"\n",(0,o.jsxs)(r.ul,{children:["\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.strong,{children:"Description:"})," Your mission is to enter Dr. Evil's laboratory and retrieve the blueprints for his Doomsday Project.\r\nThe laboratory is protected by a series of locked vault doors.\r\nEach door is controlled by a computer and requires a password to open. Unfortunately, our undercover agents have not been able to obtain the secret passwords for the vault doors, but one of our junior agents obtained the source code for each vault's computer! You will need to read the source code for each level to figure out what the password is for that vault door.\r\nAs a warmup, we have created a replica vault in our training facility."]}),"\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.strong,{children:"Difficulty:"})," Easy"]}),"\n"]}),"\n",(0,o.jsx)(r.hr,{}),"\n",(0,o.jsx)(r.h2,{id:"-solution",children:"\ud83d\udd0e Solution"}),"\n",(0,o.jsx)(r.p,{children:"This challenge is relatively straightforward - simply inspecting the source code reveals the flag.\r\nStill, let's briefly walk through what the code does."}),"\n",(0,o.jsxs)(r.p,{children:["The input is expected in the format ",(0,o.jsx)(r.code,{children:"picoCTF{<password>}"}),".\r\nThe program extracts the content within ",(0,o.jsx)(r.code,{children:"{}"})," using the following line:"]}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-java",children:'String input = userInput.substring("picoCTF{".length(), userInput.length() - 1);\n'})}),"\n",(0,o.jsxs)(r.p,{children:["This isolates the password portion and passes it to the ",(0,o.jsx)(r.code,{children:"checkPassword"})," function to verify if it matches the correct hardcoded password:"]}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-java",children:'if (vaultDoor.checkPassword(input)) {\r\n    System.out.println("Access granted.");\r\n} else {\r\n    System.out.println("Access denied!");\r\n}\n'})}),"\n",(0,o.jsxs)(r.p,{children:["The ",(0,o.jsx)(r.code,{children:"checkPassword"})," method performs a simple string comparison against a hardcoded value:"]}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-java",children:'public boolean checkPassword(String password) {\r\n    return password.equals("w4rm1ng_Up_w1tH_jAv4_be8d9806f18");\r\n}\n'})}),"\n",(0,o.jsxs)(r.p,{children:["Since the correct password is clearly visible in the code, the full flag is ",(0,o.jsx)(r.code,{children:"picoCTF{w4rm1ng_Up_w1tH_jAv4_be8d9806f18}"})]}),"\n",(0,o.jsx)(r.h2,{id:"flag",children:"\ud83d\udea9Flag"}),"\n",(0,o.jsxs)(r.blockquote,{children:["\n",(0,o.jsx)(r.p,{children:(0,o.jsx)(r.code,{children:"picoCTF{w4rm1ng_Up_w1tH_jAv4_be8d9806f18}"})}),"\n"]})]})}function h(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,o.jsx)(r,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}}}]);