"use strict";(self.webpackChunkmy_own_blog=self.webpackChunkmy_own_blog||[]).push([[6566],{2383:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"pico-ctf/general-skills/rust-fixme-3","title":"Rust fixme 3","description":"- Description: Have you heard of Rust? Fix the syntax errors in this Rust file to print the flag!","source":"@site/docs/pico-ctf/general-skills/rust-fixme-3.mdx","sourceDirName":"pico-ctf/general-skills","slug":"/pico-ctf/general-skills/rust-fixme-3","permalink":"/my-small-blog/docs/pico-ctf/general-skills/rust-fixme-3","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"tags":[]},"sidebar":"tutorialSidebar","previous":{"title":"Rust fixme 2","permalink":"/my-small-blog/docs/pico-ctf/general-skills/rust-fixme-2"},"next":{"title":"Static ain\'t always noise","permalink":"/my-small-blog/docs/pico-ctf/general-skills/static-aintalways-noise"}}');var i=r(4848),t=r(8453);const l={tags:[]},o="Rust fixme 3",c={},a=[{value:"\ud83d\udd0e Solution",id:"-solution",level:2},{value:"\ud83d\udea9Flag",id:"flag",level:2}];function d(e){const n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"rust-fixme-3",children:"Rust fixme 3"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Description:"})," Have you heard of Rust? Fix the syntax errors in this Rust file to print the flag!"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Difficulty:"})," Easy"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"-solution",children:"\ud83d\udd0e Solution"}),"\n",(0,i.jsxs)(n.p,{children:["After extracting the archive with ",(0,i.jsx)(n.code,{children:"tar -xvf fixme3.tar.gz"}),", we obtain the following files: Cargo.toml, Cargo.lock, and src/main.rs."]}),"\n",(0,i.jsxs)(n.p,{children:["Attempting to compile and run the project with ",(0,i.jsx)(n.code,{children:"cargo run"})," results in the following error:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"error[E0133]: call to unsafe function `std::slice::from_raw_parts` is unsafe and requires unsafe function or block\n"})}),"\n",(0,i.jsxs)(n.p,{children:["In Rust, certain operations are marked as ",(0,i.jsx)(n.strong,{children:"unsafe"})," because they have the potential to cause undefined behavior if not handled carefully.\r\nOne such function is ",(0,i.jsx)(n.code,{children:"std::slice::from_raw_parts(ptr, len)"}),", which creates a slice from a raw pointer.\r\nThis is inherently dangerous if:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"The pointer ptr is invalid or null,"}),"\n",(0,i.jsx)(n.li,{children:"The length len is incorrect,"}),"\n",(0,i.jsx)(n.li,{children:"The memory region is not valid or accessible for the given range."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"To ensure safety, Rust requires this function to be enclosed within an unsafe block.\r\nThis signals to the compiler - and to the developer - that the caller takes full responsibility for ensuring memory safety."}),"\n",(0,i.jsx)(n.p,{children:"To fix the issue, we modify line 31 of main.rs from:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-rust",children:"let decrypted_slice = std::slice::from_raw_parts(decrypted_ptr, decrypted_len);\n"})}),"\n",(0,i.jsx)(n.p,{children:"to:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-rust",children:"let decrypted_slice = unsafe {\r\n    std::slice::from_raw_parts(decrypted_ptr, decrypted_len)\r\n};\n"})}),"\n",(0,i.jsx)(n.p,{children:"Rebuilding and running the project again successfully yields the flag."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"\u250c\u2500\u2500(kali\u327fkali)-[~/Desktop/pico-ctf/fixme3]\r\n\u2514\u2500$ cargo run           \r\n   Compiling rust_proj v0.1.0 (/home/kali/Desktop/pico-ctf/fixme3)\r\n    Finished `dev` profile [unoptimized + debuginfo] target(s) in 0.35s\r\n     Running `target/debug/rust_proj`\r\nUsing memory unsafe languages is a: PARTY FOUL! Here is your flag: picoCTF{n0w_y0uv3_f1x3d_1h3m_411}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"flag",children:"\ud83d\udea9Flag"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"picoCTF{n0w_y0uv3_f1x3d_1h3m_411}"})}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>l,x:()=>o});var s=r(6540);const i={},t=s.createContext(i);function l(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);