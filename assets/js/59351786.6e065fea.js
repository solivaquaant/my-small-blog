"use strict";(self.webpackChunkmy_own_blog=self.webpackChunkmy_own_blog||[]).push([[8747],{303:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/flag-15f326ca74a2aa718bc2357efc7d8831.png"},2260:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/offset-6cb5964b27134a84fc7d0bdf547af73c.png"},3295:e=>{e.exports=JSON.parse('{"permalink":"/my-small-blog/blog/nt334-lab2-ctf","source":"@site/blog/nt334-lab2-ctf/index.mdx","title":"Stego secrets: Extracting embedded files using HxD and dd","description":"Write-up of a CTF challenge from Digital Forensics course, focusing on steganography techniques to extract hidden files.","date":"2025-08-17T05:53:50.000Z","tags":[{"inline":false,"label":"Steganography","permalink":"/my-small-blog/blog/tags/steganography","description":"Steganography tag description"},{"inline":false,"label":"CTF","permalink":"/my-small-blog/blog/tags/ctf","description":"CTF tag description"}],"readingTime":1.54,"hasTruncateMarker":true,"authors":[{"name":"Thai Trinh","title":"Cybersecurity Student @ UIT","url":"https://github.com/solivaquaant","page":{"permalink":"/my-small-blog/blog/authors/tndt"},"imageURL":"/my-small-blog/img/avt-trans.png","key":"tndt"}],"frontMatter":{"authors":"tndt","tags":["steganography","ctf"],"description":"Write-up of a CTF challenge from Digital Forensics course, focusing on steganography techniques to extract hidden files."},"unlisted":false,"prevItem":{"title":"Exploring DLL Side Loading: A practical walkthrough using Notepad++","permalink":"/my-small-blog/blog/dll-side-loading-notepadpp"}}')},8271:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var s=t(3295),i=t(4848),o=t(8453);const r={authors:"tndt",tags:["steganography","ctf"],description:"Write-up of a CTF challenge from Digital Forensics course, focusing on steganography techniques to extract hidden files."},a="Stego secrets: Extracting embedded files using HxD and dd",l={authorsImageUrls:[void 0]},c=[{value:"Solution",id:"solution",level:2}];function d(e){const n={blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["During Lab 2 of Digital Forensics course, we explored the topic of ",(0,i.jsx)(n.strong,{children:"Steganography"}),".\r\nAs part of the session, our instructor introduced a CTF-style challenge and offered bonus points to anyone who could successfully retrieve the flag."]}),"\n","\n",(0,i.jsx)(n.h2,{id:"solution",children:"Solution"}),"\n",(0,i.jsxs)(n.p,{children:["We were provided with a video file and a hint: ",(0,i.jsx)(n.em,{children:'"Look for the hex signature of a file that might be hidden inside."'})]}),"\n",(0,i.jsxs)(n.p,{children:["To begin, I opened the video file using ",(0,i.jsx)(n.strong,{children:"HxD"}),", a hex editor.\r\nUpon inspection, I noticed that the file header identified it as an ",(0,i.jsx)(n.code,{children:"ftypisom"})," format, which is a common container signature for MP4 videos."]}),"\n",(0,i.jsxs)(n.p,{children:["To search for embedded file signatures, I used the ",(0,i.jsx)(n.strong,{children:"Search"})," function (",(0,i.jsx)(n.code,{children:"Ctrl + F"}),") in HxD.\r\nUnder ",(0,i.jsx)(n.strong,{children:"Text-string"}),", I looked for typical MP4 box types like:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'"ftyp", "mdat", "moov", "pnot", "udta", "uuid", "moof", "free", ...\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Alternatively, I could switch to ",(0,i.jsx)(n.strong,{children:"Hex-values"})," mode and search for hex representations of known file headers."]}),"\n",(0,i.jsx)(n.p,{children:"After some scanning, I found the following hex sequence:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"66 74 79 70 6D 70 34 32\n"})}),"\n",(0,i.jsxs)(n.p,{children:["This corresponds to the ASCII string ",(0,i.jsx)(n.code,{children:"ftypmp42"}),", indicating the header of an ",(0,i.jsx)(n.strong,{children:"MP4 (version 2)"})," file.\r\nThis signature was located at ",(0,i.jsxs)(n.strong,{children:["offset ",(0,i.jsx)(n.code,{children:"0x1D62C78"})]}),"."]}),"\n",(0,i.jsx)("div",{style:{width:"100%",margin:"0 auto"},children:(0,i.jsx)("img",{src:t(2260).A,style:{width:"100%",height:"auto"}})}),"\n",(0,i.jsx)(n.p,{children:"To extract the embedded MP4 file, I first converted the offset to decimal: 0x1D62C78 = 30813300."}),"\n",(0,i.jsxs)(n.p,{children:["Then, using the ",(0,i.jsx)(n.code,{children:"dd"})," command in a Unix-like environment, I extracted the hidden file:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"dd if=video-challenge.mp4 of=output.mp4 bs=1 skip=30813300\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Opening the extracted ",(0,i.jsx)(n.code,{children:"output.mp4"})," revealed the flag for the challenge."]}),"\n",(0,i.jsx)("div",{style:{width:"80%",margin:"0 auto"},children:(0,i.jsx)("img",{src:t(303).A,style:{width:"100%",height:"auto"}})}),"\n",(0,i.jsx)(n.p,{children:"This exercise demonstrated how steganographic techniques can be used to conceal full files within other media, and how basic hex analysis combined with known file signatures can help uncover them."}),"\n",(0,i.jsx)(n.h1,{id:"flag",children:"Flag"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"inseclab{b3h1nd_th3_sc3n3}"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>a});var s=t(6540);const i={},o=s.createContext(i);function r(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);