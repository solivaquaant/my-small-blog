"use strict";(self.webpackChunkmy_own_blog=self.webpackChunkmy_own_blog||[]).push([[3919],{8453:(e,n,o)=>{o.d(n,{R:()=>i,x:()=>l});var t=o(6540);const r={},s=t.createContext(r);function i(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(s.Provider,{value:n},e.children)}},9130:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"root-me/forensic/command-and-control-level-2","title":"Command & Control - level 2","description":"- Description: Congratulations Berthier, thanks to your help the computer has been identified.","source":"@site/docs/root-me/forensic/command-and-control-level-2.mdx","sourceDirName":"root-me/forensic","slug":"/root-me/forensic/command-and-control-level-2","permalink":"/my-small-blog/docs/root-me/forensic/command-and-control-level-2","draft":false,"unlisted":false,"tags":[{"inline":false,"label":"Forensics","permalink":"/my-small-blog/docs/tags/forensics","description":"Forensics tag description"}],"version":"current","frontMatter":{"tags":["forensics"]},"sidebar":"tutorialSidebar","previous":{"title":"Capture this","permalink":"/my-small-blog/docs/root-me/forensic/capture-this/"},"next":{"title":"Command & Control - level 3","permalink":"/my-small-blog/docs/root-me/forensic/command-and-control-level-3"}}');var r=o(4848),s=o(8453);const i={tags:["forensics"]},l="Command & Control - level 2",a={},c=[{value:"\ud83d\udd0e Solution",id:"-solution",level:2},{value:"\ud83d\udea9Flag",id:"flag",level:2}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"command--control---level-2",children:"Command & Control - level 2"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Description:"})," Congratulations Berthier, thanks to your help the computer has been identified.\r\nYou have requested a memory dump but before starting your analysis you wanted to take a look at the antivirus' logs.\r\nUnfortunately, you forgot to write down the workstation's hostname.\r\nBut since you have its memory dump you should be able to get it back!\r\nThe validation flag is the workstation's hostname."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Difficulty:"})," Easy"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"-solution",children:"\ud83d\udd0e Solution"}),"\n",(0,r.jsxs)(n.p,{children:["In this challenge - and throughout the ",(0,r.jsx)(n.strong,{children:"Command & Control"})," challenges at levels 3, 4, and 5 - I'll be using ",(0,r.jsx)(n.strong,{children:"Volatility 2"}),", a powerful memory forensics framework.\r\nYou can download the standalone version from ",(0,r.jsx)(n.a,{href:"https://github.com/volatilityfoundation/volatility/releases/tag/2.6.1",children:"here"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"The first step when working with a memory dump is to determine its profile, which defines the operating system and architecture used when the memory was captured.\r\nThis is crucial because Volatility uses OS-specific structures to parse memory correctly.\r\nUsing the wrong profile can result in incomplete or inaccurate data."}),"\n",(0,r.jsxs)(n.p,{children:["To identify the profile, we use the ",(0,r.jsx)(n.code,{children:"imageinfo"})," plugin:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"\u250c\u2500\u2500(kali\u327fkali)-[~/Desktop]\r\n\u2514\u2500$ ./vol2/volatility2 -f ch2.dmp imageinfo\r\nVolatility Foundation Volatility Framework 2.6\r\nINFO    : volatility.debug    : Determining profile based on KDBG search...\r\n          Suggested Profile(s) : Win7SP1x86_23418, Win7SP0x86, Win7SP1x86\r\n                     AS Layer1 : IA32PagedMemoryPae (Kernel AS)\r\n                     AS Layer2 : FileAddressSpace (/home/kali/Desktop/ch2.dmp)\r\n                      PAE type : PAE\r\n                           DTB : 0x185000L\r\n                          KDBG : 0x82929be8L\r\n          Number of Processors : 1\r\n     Image Type (Service Pack) : 0\r\n                KPCR for CPU 0 : 0x8292ac00L\r\n             KUSER_SHARED_DATA : 0xffdf0000L\r\n           Image date and time : 2013-01-12 16:59:18 UTC+0000\r\n     Image local date and time : 2013-01-12 17:59:18 +0100\n"})}),"\n",(0,r.jsxs)(n.p,{children:["This returns a list of suggested profiles. In this case, the best match is ",(0,r.jsx)(n.code,{children:"Win7SP0x86"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["To retrieve the ",(0,r.jsx)(n.strong,{children:"workstation's hostname"}),", we use the ",(0,r.jsx)(n.code,{children:"envars"})," plugin.\r\nThis plugin enumerates environment variables associated with running processes.\r\nThese environment blocks often contain useful metadata, including usernames, TEMP paths, and sometimes the computer's hostname."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'\u250c\u2500\u2500(kali\u327fkali)-[~/Desktop]\r\n\u2514\u2500$ ./vol2/volatility2 -f ch2.dmp --profile=Win7SP0x86 envars | grep "COMPUTERNAME"\r\nVolatility Foundation Volatility Framework 2.6\r\n     560 services.exe         0x001207f0 COMPUTERNAME                   WIN-ETSA91RKCFP\r\n     576 lsass.exe            0x002507f0 COMPUTERNAME                   WIN-ETSA91RKCFP\r\n     584 lsm.exe              0x001907f0 COMPUTERNAME                   WIN-ETSA91RKCFP\r\n     692 svchost.exe          0x002c07f0 COMPUTERNAME                   WIN-ETSA91RKCFP\r\n     764 svchost.exe          0x002b07f0 COMPUTERNAME                   WIN-ETSA91RKCFP\r\n     832 svchost.exe          0x003007f0 COMPUTERNAME                   WIN-ETSA91RKCFP\n'})}),"\n",(0,r.jsxs)(n.p,{children:["From the results, the hostname of the workstation is ",(0,r.jsx)(n.strong,{children:"WIN-ETSA91RKCFP"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"flag",children:"\ud83d\udea9Flag"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"WIN-ETSA91RKCFP"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);