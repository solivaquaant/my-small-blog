"use strict";(self.webpackChunkmy_own_blog=self.webpackChunkmy_own_blog||[]).push([[5159],{5912:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>s,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"pico-ctf/binary-exploitation/pie-time","title":"PIE TIME","description":"- Description: Can you try to get the flag? Beware we have PIE!","source":"@site/docs/pico-ctf/binary-exploitation/pie-time.mdx","sourceDirName":"pico-ctf/binary-exploitation","slug":"/pico-ctf/binary-exploitation/pie-time","permalink":"/my-small-blog/docs/pico-ctf/binary-exploitation/pie-time","draft":false,"unlisted":false,"tags":[{"inline":false,"label":"Binary Exploitation","permalink":"/my-small-blog/docs/tags/binary-exploitation","description":"Binary exploitation tag description"}],"version":"current","frontMatter":{"tags":["binary-exploitation"]},"sidebar":"tutorialSidebar","previous":{"title":"heap 0","permalink":"/my-small-blog/docs/pico-ctf/binary-exploitation/heap-0"},"next":{"title":"Cryptography","permalink":"/my-small-blog/docs/category/cryptography"}}');var r=t(4848),o=t(8453);const s={tags:["binary-exploitation"]},l="PIE TIME",c={},d=[{value:"\ud83d\udd0e Solution",id:"-solution",level:2},{value:"\ud83d\udea9Flag",id:"flag",level:2}];function a(e){const n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"pie-time",children:"PIE TIME"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Description:"})," Can you try to get the flag? Beware we have PIE!"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Difficulty:"})," Easy"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"-solution",children:"\ud83d\udd0e Solution"}),"\n",(0,r.jsxs)(n.p,{children:["This challenge revolves around ",(0,r.jsx)(n.strong,{children:"PIE (Position Independent Executable)"})," in Linux binaries,\r\nwhere the executable can be loaded at any random location in memory rather than at a fixed address."]}),"\n",(0,r.jsxs)(n.p,{children:["Using the ",(0,r.jsx)(n.code,{children:"checksec"})," tool on the provided binary, we confirm that PIE is enabled."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"tndt@tndt:~/Desktop$ checksec --file=./vuln\r\nRELRO           STACK CANARY      NX            PIE             RPATH      RUNPATH\tSymbols\t\tFORTIFY\tFortified\tFortifiable\tFILE\r\nFull RELRO      Canary found      NX enabled    PIE enabled     No RPATH   No RUNPATH   78) Symbols\t  No\t0\t\t1\t\t./vuln\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Reviewing the provided source code, we notice that the program first prints the address of the ",(0,r.jsx)(n.code,{children:"main"})," function.\r\nIt then prompts the user to input an address to jump to.\r\nInterestingly, there is a ",(0,r.jsx)(n.code,{children:"win()"})," function in the code that prints the flag, but it is never called during normal execution.\r\nOur goal is to determine the address of this ",(0,r.jsx)(n.code,{children:"win()"})," function so we can jump to it."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-c",children:'int main() {\r\n  signal(SIGSEGV, segfault_handler);\r\n  setvbuf(stdout, NULL, _IONBF, 0); // _IONBF = Unbuffered\r\n\r\n  printf("Address of main: %p\\n", &main);\r\n\r\n  unsigned long val;\r\n  printf("Enter the address to jump to, ex => 0x12345: ");\r\n  scanf("%lx", &val);\r\n  printf("Your input: %lx\\n", val);\r\n\r\n  void (*foo)(void) = (void (*)())val;\r\n  foo();\r\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Using ",(0,r.jsx)(n.code,{children:"gdb"}),", we calculate the offset between ",(0,r.jsx)(n.code,{children:"main"})," and ",(0,r.jsx)(n.code,{children:"win"}),", which turns out to be ",(0,r.jsx)(n.strong,{children:"0x96"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"(gdb) p/x &main - &win\r\n$1 = 0x96\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Next, we connect to the remote server to retrieve the actual runtime address of the ",(0,r.jsx)(n.code,{children:"main"})," function"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Address of main: 0x5d65f516b33d\n"})}),"\n",(0,r.jsxs)(n.p,{children:["From there, we simply subtract the known offset (0x96) to compute the address of ",(0,r.jsx)(n.code,{children:"win()"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"(gdb) p/x 0x5d65f516b33d - 0x96\r\n$1 = 0x5d65f516b2a7\n"})}),"\n",(0,r.jsx)(n.p,{children:"Finally, we input this computed address when prompted - and successfully capture the flag."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Enter the address to jump to, ex => 0x12345: 0x5d65f516b2a7\r\nYour input: 5d65f516b2a7\r\nYou won!\r\npicoCTF{b4s1c_p051t10n_1nd3p3nd3nc3_3d38fb4b}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"flag",children:"\ud83d\udea9Flag"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"picoCTF{b4s1c_p051t10n_1nd3p3nd3nc3_3d38fb4b}"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>l});var i=t(6540);const r={},o=i.createContext(r);function s(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);